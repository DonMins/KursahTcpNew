# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
#GET     /                           controllers.HomeController.index
# An example controller showing how to use dependency injection
GET         /count                                    controllers.CountController.count
# An example controller showing how to write asynchronous code
GET         /message                                  controllers.AsyncController.message

GET         /aboutProject                             controllers.mainPageController.projectPage
+ nocsrf
POST        /aboutProject                             controllers.mainPageController.projectPage2
GET         /                                         controllers.mainPageController.test()



+ nocsrf
POST         /catalog                                 controllers.WineController.catalogPage
GET         /catalog                                  controllers.WineController.catalogPage

+ nocsrf
POST        /catalogSort                              controllers.WineController.sortCatalogPage(login:String,isAdmin:Boolean,sortCatalog:Integer)
+ nocsrf
POST        /catalogSearch                            controllers.WineController.searchCatalogPage(login:String,isAdmin:Boolean)
+ nocsrf
POST      /contact                                    controllers.ContactController.contactPage
GET      /contact                                    controllers.ContactController.contactPage

GET       /contact/:idContact                         controllers.ContactController.changeContact(idContact:Integer)
+ nocsrf
POST       /contact/:idContact                        controllers.ContactController.changeContact(idContact:Integer)




#Login page controllers
GET         /login                                    controllers.LoginController.renderLoginForm
+ nocsrf
POST        /login                                    controllers.LoginController.checkingLoginForm
GET         /logout                                   controllers.LoginController.logout

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                             controllers.Assets.versioned(path="/public", file: Asset)

#controller for list of user
GET         /users                                    controllers.UsersController.usersList(login:String)
GET         /users/:id                                controllers.UsersController.deleteUser(id: Integer,login:String)
GET         /adduser                                  controllers.UsersController.renderAddUserForm(admin:Boolean,error:Integer)
+ nocsrf
POST        /adduser                                  controllers.UsersController.addingUser(admin:Boolean)


GET         /updateuser                               controllers.UsersController.renderUpdateUserInfo(id: Integer,login:String)
+ nocsrf
POST        /updateuser                               controllers.UsersController.updateUserInfo(id: Integer,login:String)

#controller rating
GET         /seeRating                                controllers.RatingController.ratingUserPage(login:String,isAdmin: Boolean)
#controller wine

GET         /wine/:id                                 controllers.WineController.deleteWine(id: Integer, login: String)
GET         /addWinecatalog/:login                    controllers.WineController.addingWine(login: String)
GET         /addWine/:login                           controllers.WineController.renderAddWine(login: String)
GET         /updateWine                               controllers.WineController.renderUpdateWineInfo(id: Integer,login:String)
+ nocsrf
POST         /catalog/:id                               controllers.WineController.upload(id:Integer)
+ nocsrf
POST        /updateWine                               controllers.WineController.updateWineInfo(id: Integer,login:String)

#controller provider
+ nocsrf
POST        /basketPage                            controllers.BasketController.basketPage
GET        /basketPage                              controllers.BasketController.basketPage
GET        /buyProduct                           controllers.BasketController.buyProducts

GET       /salePage                                    controllers.SaleController.showSales
GET       /salePage/:idSale      controllers.SaleController.changeSale(idSale:Integer)
+ nocsrf
POST       /salePage/:idSale         controllers.SaleController.changeSale(idSale:Integer)
+ nocsrf
POST         /uploadSalePage/:id                               controllers.SaleController.upload(id:Integer)
+ nocsrf
GET       /delsalePage/:idSale                                    controllers.SaleController.deleteSale(idSale: Integer)
GET       /addSale                                 controllers.SaleController.newSale

GET         /basketPageAdd/:login/:isAdmin/:id        controllers.BasketController.addIn(login:String, isAdmin: Boolean, id:Integer)
GET         /basketPageAdd/:login/:id        controllers.BasketController.addInFavorite(login:String, id:Integer)
GET         /basketDelete/:id/:login/        controllers.BasketController.deleteFromBasket(id:Integer,login:String)
GET         /favoriteDelete/:id/:login/        controllers.BasketController.deleteFromFavorite(id:Integer,login:String)
+ nocsrf
POST        /newWineRaring          controllers.RatingController.newRating

